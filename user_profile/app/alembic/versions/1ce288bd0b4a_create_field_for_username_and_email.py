"""Create field for username and email

Revision ID: 1ce288bd0b4a
Revises: dd269d0d4c11
Create Date: 2025-08-23 02:48:07.893218

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ce288bd0b4a'
down_revision: Union[str, None] = 'dd269d0d4c11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_profile', sa.Column('username', sa.String(length=100), nullable=True))
    op.add_column('user_profile', sa.Column('email', sa.String(length=100), nullable=True))
    op.alter_column('user_profile', 'NameIRL',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profile', 'Surname',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profile', 'Patronymic',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profile', 'Description',
               existing_type=sa.VARCHAR(length=500),
               nullable=True)
    op.alter_column('user_profile', 'Region',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profile', 'Type',
               existing_type=postgresql.ENUM('Student', 'Teacher', name='userenum'),
               nullable=True)
    op.alter_column('user_profile', 'Organization',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profile', 'Organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_profile', 'team',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profile', 'team_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_profile', 'team_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_profile', 'team',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_profile', 'Organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_profile', 'Organization',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_profile', 'Type',
               existing_type=postgresql.ENUM('Student', 'Teacher', name='userenum'),
               nullable=False)
    op.alter_column('user_profile', 'Region',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_profile', 'Description',
               existing_type=sa.VARCHAR(length=500),
               nullable=False)
    op.alter_column('user_profile', 'Patronymic',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_profile', 'Surname',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_profile', 'NameIRL',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_column('user_profile', 'email')
    op.drop_column('user_profile', 'username')
    # ### end Alembic commands ###
